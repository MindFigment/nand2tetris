	@0
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@R0
	D=A
	@LCL
	A=M+D
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M-1
	@SP
	A=M
	D=M
	@SP
	A=M+1
	A=M
	M=D
(LOOP_START)
	@R0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@R0
	D=A
	@LCL
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	A=M-1
	D=M
	A=A-1
	M=M+D
	@SP
	M=M-1
	@R0
	D=A
	@LCL
	A=M+D
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M-1
	@SP
	A=M
	D=M
	@SP
	A=M+1
	A=M
	M=D
	@R0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@1
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP
	A=M-1
	D=M
	A=A-1
	M=M-D
	@SP
	M=M-1
	@R0
	D=A
	@ARG
	A=M+D
	D=A
	@SP
	A=M
	M=D
	@SP
	M=M-1
	@SP
	A=M
	D=M
	@SP
	A=M+1
	A=M
	M=D
	@R0
	D=A
	@ARG
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
	@SP // START: if-goto
	M=M-1
	A=M
	D=M // Check if there is true value on top of the stack (represented as -1)
	@LOOP_START
	D;JNE // END: if-goto
	@R0
	D=A
	@LCL
	A=M+D
	D=M
	@SP
	A=M
	M=D
	@SP
	M=M+1
(END)
	@END
	0;JMP
